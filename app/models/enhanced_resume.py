from sqlalchemy import Column, String, Integer, DateTime, Boolean, JSON, ForeignKey, Text
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
import uuid

from app.db.base import Base

class EnhancedResume(Base):
    """
    Model for storing enhanced resume data generated by AI.
    This is separate from the Doc table and contains structured resume data.
    """
    __tablename__ = "enhanced_resumes"

    id = Column(String, primary_key=True, index=True, default=lambda: str(uuid.uuid4()))
    user_id = Column(String, ForeignKey("users.id"), nullable=True)
    
    # Structured resume data
    personal_info = Column(JSON, nullable=False, default=dict)
    work_experience = Column(JSON, nullable=False, default=list)
    education = Column(JSON, nullable=False, default=list)
    skills = Column(JSON, nullable=False, default=list)
    projects = Column(JSON, nullable=False, default=list)
    
    # Source information
    source_file_name = Column(String, nullable=True)
    source_doc_id = Column(String, ForeignKey("docs.id"), nullable=True)
    
    # Metadata
    meta_data = Column(JSON, nullable=True)
    
    # Common fields
    is_active = Column(Boolean, default=True)
    created_at = Column(DateTime(timezone=True), server_default=func.now())
    updated_at = Column(DateTime(timezone=True), onupdate=func.now())
    
    # Relationships
    source_doc = relationship("Doc", foreign_keys=[source_doc_id], backref="enhanced_resumes") 